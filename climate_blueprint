blueprint:
  name: "Temperature-based Climate Control"
  description: "Control a climate device based on temperature sensor readings with customizable thresholds"
  domain: automation
  input:
    climate_entity:
      name: Climate Device
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: Temperature Sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
    base_temperature:
      name: Base Temperature
      description: "The base temperature to compare against"
      selector:
        number:
          min: 0
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    upper_threshold:
      name: Upper Threshold
      description: "Temperature difference above base to trigger cooling"
      selector:
        number:
          min: 0
          max: 10
          step: 0.5
          unit_of_measurement: "°C"
    lower_threshold:
      name: Lower Threshold
      description: "Temperature difference below base to turn off climate"
      selector:
        number:
          min: 0
          max: 10
          step: 0.5
          unit_of_measurement: "°C"
    enable_automation:
      name: Enable Automation
      description: "Toggle to enable or disable the automation"
      selector:
        boolean:

variables:
  climate_entity: !input climate_entity
  temperature_sensor: !input temperature_sensor
  base_temperature: !input base_temperature
  upper_threshold: !input upper_threshold
  lower_threshold: !input lower_threshold
  enable_automation: !input enable_automation

trigger:
  - platform: numeric_state
    entity_id: !input temperature_sensor
    above: "{{ base_temperature + upper_threshold }}"
  - platform: numeric_state
    entity_id: !input temperature_sensor
    below: "{{ base_temperature - lower_threshold }}"
  - platform: state
    entity_id: !input enable_automation

condition:
  - condition: template
    value_template: "{{ enable_automation }}"

action:
  - choose:
      - conditions:
          - condition: numeric_state
            entity_id: !input temperature_sensor
            above: "{{ base_temperature + upper_threshold }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input climate_entity
            data:
              hvac_mode: cool
      - conditions:
          - condition: numeric_state
            entity_id: !input temperature_sensor
            below: "{{ base_temperature - lower_threshold }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input climate_entity
            data:
              hvac_mode: "off"
